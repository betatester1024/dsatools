{
  "version": 3,
  "sources": ["../../src/assets/autoInputSave.js", "../../src/bpeditor/main.js", "../../src/bpeditor/operations.js", "../../src/main.js"],
  "sourcesContent": ["const strgKey = \"dsatools_inputs-\" + globalThis.toolPath.split(\"/\").pop()\n\nif (document.readyState != \"loading\")\n\tmain()\nelse\n\tdocument.addEventListener(\"DOMContentLoaded\", main)\n\nfunction main() {\n\tlet data = localStorage.getItem(strgKey)\n\tif (data) {\n\t\ttry { data = JSON.parse(data) } catch {/**/ }\n\t\tfor (const path in data) {\n\t\t\tconst el = document.querySelector(path\n\t\t\t\t+ (path.includes(\"type=\\\"radio\\\"\")\n\t\t\t\t\t? `[value=\"${data[path]}\"]`\n\t\t\t\t\t: \"\"\n\t\t\t\t)\n\t\t\t)\n\t\t\tif (!el) {\n\t\t\t\tdelete data[path]\n\t\t\t\tcontinue\n\t\t\t}\n\t\t\tif (el.type == \"checkbox\" || el.type == \"radio\")\n\t\t\t\tel.checked = !!data[path]\n\t\t\telse\n\t\t\t\tel.value = data[path]\n\t\t\tel.dispatchEvent(new Event(el.tagName == \"TEXTAREA\" ? \"input\" : \"change\"))\n\t\t}\n\t\tlocalStorage.setItem(strgKey, JSON.stringify(data))\n\t}\n\n\tconst elements = document.querySelectorAll(\"[data-save]\")\n\telements.forEach(el => {\n\t\tel.addEventListener(el.tagName == \"TEXTAREA\" ? \"input\" : \"change\", () => {\n\t\t\tconst path = getPath(el)\n\t\t\tlet data = localStorage.getItem(strgKey) ?? \"{}\"\n\t\t\ttry { data = JSON.parse(data) } catch { data = {} }\n\t\t\tdata[path] = el.value\n\t\t\tif (el.type == \"checkbox\")\n\t\t\t\tdata[path] = el.checked\n\t\t\telse\n\t\t\t\tdata[path] = el.value\n\t\t\tlocalStorage.setItem(strgKey, JSON.stringify(data))\n\t\t})\n\t})\n}\n\nfunction getPath(el) {\n\tconst selectors = []\n\twhile (el) {\n\t\tif (el.tagName == \"BODY\") break\n\t\tlet path\n\t\tif (el.id != \"\") {\n\t\t\tpath = \"#\" + el.id\n\t\t\tselectors.unshift(path)\n\t\t\tbreak\n\t\t} else if (el.type == \"radio\" && el.name) {\n\t\t\tpath = `#${el.dataset.save} ${el.tagName.toLowerCase()}[type=\"${el.type}\"][name=\"${el.name}\"]`\n\t\t\tselectors.unshift(path)\n\t\t\tbreak\n\t\t} else {\n\t\t\tpath = `:nth-child(${Array.from(el.parentNode.children).indexOf(el) + 1})`\n\t\t\tselectors.unshift(path)\n\t\t}\n\t\tel = el.parentNode\n\t}\n\treturn selectors.join(\">\")\n}\n", "globalThis.toolPath = import.meta.url.substring(0, import.meta.url.lastIndexOf(\"/\"))\nconst credits = `by <a href='https://github.com/Blueyescat' target='_blank'>Blueyescat</a>.\n\tUses <a href='https://github.com/Blueyescat/dsabp-js' target='_blank'>dsabp-js</a>.`\n\nconst autoInputSave = import(\"/assets/autoInputSave.js\")\n// eslint-disable-next-line\nimport { Blueprint, BuildCmd, Item, PREFIX, decode, encode } from \"dsabp-js\"\nimport * as operations from \"./operations.js\"\nimport { loadHF } from \"/main.js\"\nloadHF(credits)\n\nconst inputBp = document.getElementById(\"bp-input\")\nconst opRadios = Array.from(document.getElementById(\"chips-operation\").querySelectorAll(\"input\"))\nconst opOptions = document.getElementById(\"op-options\")\nconst elResult = document.getElementById(\"result\")\nconst elsNotice = {\n\tinput: document.getElementById(\"notice-input\"),\n\tresult: document.getElementById(\"notice-result\"),\n\tcopy: document.getElementById(\"notice-copy\")\n}\nconst buttonProcess = document.getElementById(\"button-process\")\nconst buttonCopy = document.getElementById(\"button-copy\")\nconst buttonMove = document.getElementById(\"button-move\")\nconst inputRotateAngle = document.getElementById(\"input-rotate-angle\")\n\nconst noticeTimeoutIds = {},\n\tsearchParams = new URLSearchParams(window.location.search)\n\n/** @type {Blueprint} */\nlet bp,\n\tcurrentOp = \"0\",\n\tinputBpTimer,\n\tautoCopy\n\ninputBp.addEventListener(\"input\", function () {\n\tthis.style.height = 0\n\tthis.style.height = this.scrollHeight + 2 + \"px\"\n\tclearTimeout(inputBpTimer)\n\tinputBpTimer = setTimeout(() => loadBlueprint(this.value.trim()), 300)\n})\n\n\nif (searchParams.has(\"op\")) {\n\tconst radio = opRadios.find(radio => radio.value == searchParams.get(\"op\"))\n\tautoInputSave.then(() => {\n\t\tif (radio && !radio.checked) {\n\t\t\tradio.checked = true\n\t\t\tradio.dispatchEvent(new Event(\"change\"))\n\t\t}\n\t})\n}\n\nopRadios.forEach(radio => {\n\tradio.addEventListener(\"change\", function () {\n\t\tcurrentOp = this.value\n\t\tconst divs = opOptions.querySelectorAll(\":scope > div\")\n\t\tdivs.forEach(div => div.classList.toggle(\"active\", div.dataset.op == currentOp))\n\t\tsearchParams.set(\"op\", currentOp)\n\t\thistory.replaceState(null, null, \"?\" + searchParams.toString())\n\t})\n})\n\nasync function loadBlueprint(str) {\n\tif (str == \"\") return notice(\"input\", \"suc\", \"\")\n\tbp = await decode(str).catch(err => {\n\t\tnotice(\"input\", \"err\", \"Invalid blueprint string.\")\n\t\tconsole.info(\"Blueprint decoding error:\", err.message)\n\t})\n\tif (!bp) return\n\tnotice(\"input\", \"suc\", getBpStats(str, bp))\n}\n\nbuttonProcess.addEventListener(\"click\", async () => {\n\tif (bp == null) return\n\tconst newBp = bp.clone()\n\tlet additionalNotice\n\tif (currentOp == \"crop\") {\n\t\toperations.crop(newBp, {\n\t\t\tdelete: document.getElementById(\"select-crop-mode\").value == \"0\",\n\t\t\ttop: parseInt(document.getElementById(\"input-crop-top\").value),\n\t\t\tright: parseInt(document.getElementById(\"input-crop-right\").value),\n\t\t\tbottom: parseInt(document.getElementById(\"input-crop-bottom\").value),\n\t\t\tleft: parseInt(document.getElementById(\"input-crop-left\").value)\n\t\t})\n\t} else if (currentOp == \"flip\") {\n\t\toperations.flip(newBp, document.getElementById(\"select-flip-direction\").value)\n\t} else if (currentOp == \"rotate\") {\n\t\toperations.rotate(newBp, parseFloat(inputRotateAngle.value))\n\t} else if (currentOp == \"replace\") {\n\t\tconst amount = operations.replace(newBp, {\n\t\t\tsearch: document.getElementById(\"input-replace-search\").value.toLowerCase().trim().replace(/ +/, \" \").split(/\\s*,\\s*/),\n\t\t\treplacement: document.getElementById(\"input-replace-replacement\").value.toLowerCase().trim().replace(/ +/, \" \")\n\t\t})\n\t\tadditionalNotice = `Replaced ${amount} items`\n\t}\n\telResult.textContent = PREFIX + await encode(newBp)\n\tif (autoCopy) buttonCopy.click()\n\telResult.focus()\n\telResult.style.height = 0\n\telResult.style.height = elResult.scrollHeight + \"px\"\n\telResult.scrollTop = elResult.scrollHeight\n\tnotice(\"result\", \"suc\", (additionalNotice ? `${additionalNotice}\\n` : \"\") + getBpStats(elResult.textContent, newBp))\n})\n\ndocument.getElementById(\"cb-auto-copy\").addEventListener(\"change\", e => autoCopy = e.target.checked)\n\n// angle buttons\ndocument.getElementById(\"rotate-angle-buttons\").addEventListener(\"click\", e => {\n\tif (!(\"a\" in e.target.dataset)) return\n\tinputRotateAngle.value = e.target.dataset.a\n\tinputRotateAngle.dispatchEvent(new Event(\"change\"))\n})\n\n// load replace item list\nvoid function () {\n\tconst box = document.getElementById(\"replace-item-list\")\n\tconst buildables = [], items = []\n\tfor (const item of Item.getMap().values()) {\n\t\tif (item != Item.NULL)\n\t\t\t(item.isBuildable ? buildables : items).push(`${item.id.toString().padStart(3, \"0\")}: ${item.name}`)\n\t}\n\tbox.innerHTML += buildables.join(\"<br>\") + \"<br><br>\" + items.join(\"<br>\")\n}()\n\n// result buttons\n\nelResult.addEventListener(\"focus\", () => elResult.select())\nelResult.addEventListener(\"dblclick\", () => elResult.select())\nbuttonCopy.addEventListener(\"click\", () => {\n\tnavigator.clipboard.writeText(elResult.textContent).catch(console.error)\n\tnotice(\"copy\", \"var(--blue)\", \"Copied!\", 2000)\n})\nbuttonMove.addEventListener(\"click\", () => {\n\tinputBp.value = elResult.textContent\n\tinputBp.dispatchEvent(new Event(\"input\"))\n\telResult.textContent = \"\"\n\tnotice(\"result\", \"suc\", \"\")\n})\n\n// util\n\nfunction getBpStats(str, bp) {\n\tconst b = bp.commands.filter(c => c instanceof BuildCmd).length\n\treturn `${str.length} characters, ${bp.width}x${bp.height}, ${b} build commands, ${bp.commands.length - b} config commands`\n}\n\nfunction notice(target, color, text = \"\", temp) {\n\tconst el = elsNotice[target]\n\tclearTimeout(noticeTimeoutIds[target])\n\tel.style.color = color == \"err\" ? \"#D8000C\"\n\t\t: color == \"suc\" ? \"#61C761\"\n\t\t\t: color\n\tel.textContent = text\n\tif (text == \"\") return\n\tif (temp) noticeTimeoutIds[target] = setTimeout(\n\t\t() => el.textContent = \"\",\n\t\ttypeof temp == \"number\" ? temp : 8000\n\t)\n}\n", "// eslint-disable-next-line\nimport { Blueprint, BuildBits, BuildCmd, ConfigCmd, Item, LoaderPoint, Shape } from \"dsabp-js\"\n\nconst shapeFlipMap = {\n\tH: new Map([\n\t\t[Shape.RAMP_DL, Shape.RAMP_DR],\n\t\t[Shape.RAMP_UL, Shape.RAMP_UR],\n\t\t[Shape.SLAB_L, Shape.SLAB_R],\n\t\t[Shape.HALF_RAMP_1_D, Shape.HALF_RAMP_1_DI],\n\t\t[Shape.HALF_RAMP_1_L, Shape.HALF_RAMP_1_RI],\n\t\t[Shape.HALF_RAMP_2_D, Shape.HALF_RAMP_2_DI],\n\t\t[Shape.HALF_RAMP_2_L, Shape.HALF_RAMP_2_RI],\n\t\t[Shape.HALF_RAMP_1_UI, Shape.HALF_RAMP_1_U],\n\t\t[Shape.HALF_RAMP_1_LI, Shape.HALF_RAMP_1_R],\n\t\t[Shape.HALF_RAMP_2_UI, Shape.HALF_RAMP_2_U],\n\t\t[Shape.HALF_RAMP_2_LI, Shape.HALF_RAMP_2_R],\n\t\t[Shape.HALF_RAMP_3_D, Shape.HALF_RAMP_3_DI],\n\t\t[Shape.HALF_RAMP_3_L, Shape.HALF_RAMP_3_RI],\n\t\t[Shape.HALF_RAMP_3_UI, Shape.HALF_RAMP_3_U],\n\t\t[Shape.HALF_RAMP_3_LI, Shape.HALF_RAMP_3_R],\n\t\t[Shape.QUARTER_DL, Shape.QUARTER_DR],\n\t\t[Shape.QUARTER_UL, Shape.QUARTER_UR],\n\t\t[Shape.QUARTER_RAMP_DL, Shape.QUARTER_RAMP_DR],\n\t\t[Shape.QUARTER_RAMP_UL, Shape.QUARTER_RAMP_UR],\n\t\t[Shape.BEVEL_DL, Shape.BEVEL_DR],\n\t\t[Shape.BEVEL_UL, Shape.BEVEL_UR]\n\t]),\n\tV: new Map([\n\t\t[Shape.RAMP_UR, Shape.RAMP_DR],\n\t\t[Shape.RAMP_UL, Shape.RAMP_DL],\n\t\t[Shape.SLAB_U, Shape.SLAB_D],\n\t\t[Shape.HALF_RAMP_1_R, Shape.HALF_RAMP_1_RI],\n\t\t[Shape.HALF_RAMP_2_R, Shape.HALF_RAMP_2_RI],\n\t\t[Shape.HALF_RAMP_1_UI, Shape.HALF_RAMP_1_D],\n\t\t[Shape.HALF_RAMP_1_DI, Shape.HALF_RAMP_1_U],\n\t\t[Shape.HALF_RAMP_1_LI, Shape.HALF_RAMP_1_L],\n\t\t[Shape.HALF_RAMP_2_UI, Shape.HALF_RAMP_2_D],\n\t\t[Shape.HALF_RAMP_2_DI, Shape.HALF_RAMP_2_U],\n\t\t[Shape.HALF_RAMP_2_LI, Shape.HALF_RAMP_2_L],\n\t\t[Shape.HALF_RAMP_3_R, Shape.HALF_RAMP_3_RI],\n\t\t[Shape.HALF_RAMP_3_L, Shape.HALF_RAMP_3_LI],\n\t\t[Shape.HALF_RAMP_3_UI, Shape.HALF_RAMP_3_D],\n\t\t[Shape.HALF_RAMP_3_DI, Shape.HALF_RAMP_3_U],\n\t\t[Shape.QUARTER_UR, Shape.QUARTER_DR],\n\t\t[Shape.QUARTER_UL, Shape.QUARTER_DL],\n\t\t[Shape.QUARTER_RAMP_DR, Shape.QUARTER_RAMP_UR],\n\t\t[Shape.QUARTER_RAMP_UL, Shape.QUARTER_RAMP_DL],\n\t\t[Shape.BEVEL_DR, Shape.BEVEL_UR],\n\t\t[Shape.BEVEL_UL, Shape.BEVEL_DL]\n\t])\n}\nconst loaderFlipMap = {\n\tH: new Map([\n\t\t[LoaderPoint.TOP_LEFT, LoaderPoint.TOP_RIGHT],\n\t\t[LoaderPoint.LEFT, LoaderPoint.RIGHT],\n\t\t[LoaderPoint.BOTTOM_LEFT, LoaderPoint.BOTTOM_RIGHT]\n\t]),\n\tV: new Map([\n\t\t[LoaderPoint.TOP_LEFT, LoaderPoint.BOTTOM_LEFT],\n\t\t[LoaderPoint.TOP, LoaderPoint.BOTTOM],\n\t\t[LoaderPoint.TOP_RIGHT, LoaderPoint.BOTTOM_RIGHT]\n\t])\n}\n\nfor (const D of [\"H\", \"V\"]) {\n\tfor (const [k, v] of shapeFlipMap[D])\n\t\tshapeFlipMap[D].set(v, k)\n\tfor (const [k, v] of loaderFlipMap[D])\n\t\tloaderFlipMap[D].set(v, k)\n}\n\n/**\n * @param {Blueprint} bp\n * @param {\"H\"|\"V\"} D direction\n */\nexport function flip(bp, D) {\n\tfor (const cmd of bp.commands) {\n\t\tif (cmd instanceof ConfigCmd) {\n\t\t\tif (cmd.loader?.pickupPoint != null)\n\t\t\t\tcmd.loader.pickupPoint = loaderFlipMap[D].get(cmd.loader.pickupPoint) ?? cmd.loader.pickupPoint\n\t\t\tif (cmd.loader?.dropPoint != null)\n\t\t\t\tcmd.loader.dropPoint = loaderFlipMap[D].get(cmd.loader.dropPoint) ?? cmd.loader.dropPoint\n\t\t\tif (cmd.pusher?.angle != null) {\n\t\t\t\tcmd.pusher.angle = (D == \"H\" ? 180 : 360) - cmd.pusher?.angle\n\t\t\t\tif (cmd.pusher.angle < 0)\n\t\t\t\t\tcmd.pusher.angle += 360\n\t\t\t}\n\t\t\tif (cmd.angle != null) {\n\t\t\t\tcmd.angle = (D == \"H\" ? 180 : 360) - cmd.angle\n\t\t\t\tif (cmd.angle < 0)\n\t\t\t\t\tcmd.angle += 360\n\t\t\t}\n\t\t} else if (cmd instanceof BuildCmd) {\n\t\t\tif (cmd.shape)\n\t\t\t\tcmd.shape = shapeFlipMap[D].get(cmd.shape) ?? cmd.shape\n\t\t\tif (D == \"H\") {\n\t\t\t\tif (cmd.bits) {\n\t\t\t\t\tcmd.bits = new BuildBits(cmd.bits.toString().split(\"\").reduce((r, c) => c + r))\n\t\t\t\t\tcmd.x += cmd.bits.size - 1\n\t\t\t\t}\n\t\t\t\tcmd.x = bp.width - cmd.x - 1\n\t\t\t} else if (D == \"V\") {\n\t\t\t\tcmd.y = bp.height - cmd.y - 1\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * @param {Blueprint} bp\n * @param {{delete: boolean, top: number, right: number, bottom: number, left: number}} options\n */\nexport function crop(bp, options) {\n\tconst pL = { x: options.left, y: options.bottom },\n\t\tpR = { x: bp.width - options.right - 1, y: bp.height - options.top - 1 }\n\n\tbp.commands = bp.commands.filter(cmd => {\n\t\tif (cmd instanceof ConfigCmd)\n\t\t\treturn true\n\n\t\tif (cmd instanceof BuildCmd) {\n\t\t\tif (cmd.bits && !cmd.bits.isOne()) {\n\t\t\t\tlet newX\n\t\t\t\tfor (const [i, bit] of cmd.bits.toArray().entries()) {\n\t\t\t\t\tif (bit != true) continue\n\t\t\t\t\tif (!isIn(cmd.x + i, cmd.y)) {\n\t\t\t\t\t\tif (newX == null)\n\t\t\t\t\t\t\tnewX = cmd.x + i\n\t\t\t\t\t\tcontinue\n\t\t\t\t\t}\n\t\t\t\t\tcmd.bits.clear(i)\n\t\t\t\t\tif (cmd.bits.isZero()) // became empty, remove the command\n\t\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t\tcmd.x = newX\n\t\t\t\tcmd.bits.trimLeadZeros()\n\t\t\t}\n\t\t\tif (isIn(cmd.x, cmd.y)) {\n\t\t\t\treturn false\n\t\t\t}\n\t\t\tif (options.delete) {\n\t\t\t\tcmd.x -= options.left\n\t\t\t\tcmd.y -= options.bottom\n\t\t\t}\n\t\t\treturn true\n\t\t}\n\t})\n\n\tif (options.delete) {\n\t\tbp.width -= options.right + options.left\n\t\tbp.height -= options.top + options.bottom\n\t}\n\tstripRedundantCfgCmds(bp)\n\n\tfunction isIn(x, y) {\n\t\tconst r = (x >= pL.x && x <= pR.x && y >= pL.y && y <= pR.y)\n\t\treturn options.delete ? !r : r\n\t}\n}\n\n/**\n * @param {Blueprint} bp\n * @param {number} angle\n */\nexport function rotate(bp, angle) {\n\tconst cX = bp.width / 2\n\tconst cY = bp.height / 2\n\tangle *= Math.PI / 180\n\tconst cos = Math.cos(angle)\n\tconst sin = Math.sin(angle)\n\n\tlet minX = Infinity, minY = Infinity\n\tlet maxX = 0, maxY = 0\n\n\texpandBuildBits(bp)\n\n\tfor (const cmd of bp.commands) {\n\t\tif (!(cmd instanceof BuildCmd)) continue\n\t\t[cmd.x, cmd.y] = rotateC(cmd.x, cmd.y)\n\t\tminX = Math.min(minX, cmd.x)\n\t\tminY = Math.min(minY, cmd.y)\n\t\tmaxX = Math.max(maxX, cmd.x)\n\t\tmaxY = Math.max(maxY, cmd.y)\n\t}\n\n\tfor (const cmd of bp.commands) {\n\t\tif (!(cmd instanceof BuildCmd)) continue\n\t\tcmd.x = cmd.x - minX\n\t\tcmd.y = cmd.y - minY\n\t}\n\n\tbp.width = Math.ceil((maxX - minX) + 1)\n\tbp.height = Math.ceil((maxY - minY) + 1)\n\n\tmakeBuildBits(bp)\n\n\tfunction rotateC(x, y) {\n\t\treturn [\n\t\t\ttoFixed(((x - cX) * cos) - ((y - cY) * sin) + cX),\n\t\t\ttoFixed(((x - cX) * sin) + ((y - cY) * cos) + cY)\n\t\t]\n\t}\n}\n\nfunction toFixed(n, digits = 10) {\n\tconst f = 10 ** digits\n\treturn Math.round(n * f) / f\n}\n\n/**\n * @param {Blueprint} bp\n * @param {{search: string[], replacement: string}} options\n * @returns {number} Replaced amount\n */\nexport function replace(bp, options) {\n\tconst { search, replacement } = options\n\tconst del = replacement == \"\"\n\tlet amount = 0\n\n\tconst searchItems = new Set(resolveItemInputs(search))\n\tconst doSearchAir = searchItems.has(Item.NULL)\n\n\tconst replacementItem = del ? Item.NULL\n\t\t: !isNaN(replacement) ? Item.getById(parseInt(replacement)) : resolveItemName(replacement)[0]\n\n\tif (replacementItem == null) return amount\n\n\tconst filled = new Set()\n\tlet i = bp.commands.length\n\twhile (i--) {\n\t\tconst cmd = bp.commands[i]\n\t\tif (!(cmd instanceof BuildCmd)) continue\n\n\t\tif (doSearchAir) {\n\t\t\tif (cmd.bits) {\n\t\t\t\tlet bitI = 0\n\t\t\t\tfor (const bit of cmd.bits) {\n\t\t\t\t\tif (bit) filled.add(`${cmd.x + bitI},${cmd.y}`)\n\t\t\t\t\t++bitI\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfilled.add(`${cmd.x},${cmd.y}`)\n\t\t\t}\n\t\t}\n\n\t\tif (searchItems.has(cmd.item)) {\n\t\t\tif (del) {\n\t\t\t\tbp.commands.splice(i, 1)\n\t\t\t} else {\n\t\t\t\tcmd.item = replacementItem\n\t\t\t\tif (!replacementItem.isBuildable)\n\t\t\t\t\tcmd.shape = undefined\n\t\t\t}\n\t\t\tamount += cmd.bits ? cmd.bits.toArray().filter(bit => bit).length : 1\n\t\t}\n\t}\n\n\tstripRedundantCfgCmds(bp)\n\n\tif (doSearchAir) {\n\t\texpandBuildBits(bp)\n\t\tfor (let x = 0; x < bp.width; x++) {\n\t\t\tfor (let y = 0; y < bp.height; y++) {\n\t\t\t\tif (!filled.has(`${x},${y}`)) {\n\t\t\t\t\tbp.commands.push(new BuildCmd({ x, y, item: replacementItem }))\n\t\t\t\t\t++amount\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tmakeBuildBits(bp)\n\t}\n\n\treturn amount\n}\n\nfunction resolveItemInputs(inputs) {\n\tconst output = []\n\t/** @type {Set<\"block\"|\"buildable\"|\"nonbuildable\"|\"mac\"|\"bigmac\"|\"smallmac\"|\"hull\">} */\n\tconst categories = new Set()\n\n\tfor (const s of new Set(inputs)) {\n\t\tif (s == \"block\") categories.add(\"block\")\n\t\telse if (s == \"buildable\") categories.add(\"buildable\")\n\t\telse if (s == \"non-buildable\" || s == \"nonbuildable\") categories.add(\"nonbuildable\")\n\t\telse if (s == \"machine\") categories.add(\"mac\")\n\t\telse if (s == \"big machine\") categories.add(\"bigmac\")\n\t\telse if (s == \"1x1 machine\" || s == \"small machine\") categories.add(\"smallmac\")\n\t\telse if (s == \"hull mounted\" || s == \"hull-mounted\" || s == \"hull\") categories.add(\"hull\")\n\t\telse // not a category\n\t\t\t!isNaN(s) ? output.push(Item.getById(parseInt(s))) : output.push(...resolveItemName(s))\n\t}\n\n\t/** @param {Item} i */\n\tconst isBigMac = i => i.buildInfo?.[0]?.bounds.x > 1 || i.buildInfo?.[0]?.bounds.y > 1\n\n\tif (categories.size) {\n\t\tfor (const item of Item.getMap().values()) {\n\t\t\tif (categories.has(\"block\") && item.isBlock\n\t\t\t\t|| categories.has(\"buildable\") && item.isBuildable\n\t\t\t\t|| categories.has(\"nonbuildable\") && !item.isBuildable\n\t\t\t\t|| categories.has(\"mac\") && item.isBuildable && !item.isBlock\n\t\t\t\t|| categories.has(\"bigmac\") && item.isBuildable && !item.isBlock && isBigMac(item)\n\t\t\t\t|| categories.has(\"smallmac\") && item.isBuildable && !item.isBlock && !isBigMac(item)\n\t\t\t\t|| categories.has(\"hull\") && item.isBuildable && item.buildInfo?.[0]?.require_blocks?.[0].block.includes(\"HULL\")\n\t\t\t)\n\t\t\t\toutput.push(item)\n\t\t}\n\t}\n\treturn output\n}\n\n/** Item name to items */\nfunction resolveItemName(name) {\n\tif (name == \"air\")\n\t\treturn [Item.NULL]\n\n\tconst output = []\n\tfor (const item of Item.getMap().values()) {\n\t\tif (item.name.toLowerCase().includes(name))\n\t\t\toutput.push(item)\n\t}\n\treturn output\n}\n\n/**\n * Compresses all build commands to the smallest amount of BuildBits possible.\n * Meant to be used on a BP that has no BuildBits.\n * Made quickly. It could probably be much more efficient and clean.\n * @param {Blueprint} bp\n */\nfunction makeBuildBits(bp) {\n\tclass BuildCmdGroup {\n\t\t/** @type {ConfigCmd} */\n\t\tcfgCmd\n\t\t/** @type {Array<BuildCmd>} */\n\t\tcommands\n\t\tconstructor(cmd, cfgCmd) {\n\t\t\tthis.commands = [cmd]\n\t\t\tthis.cfgCmd = cfgCmd\n\t\t}\n\t\tget item() {\n\t\t\treturn this.commands[0]?.item\n\t\t}\n\t\tget shape() {\n\t\t\treturn this.commands[0]?.shape\n\t\t}\n\t}\n\n\t/** @type {Object<string, BuildCmdGroup[]>} */\n\tconst rows = {}\n\tlet currentCfg\n\tfor (const cmd of bp.commands) {\n\t\tif (cmd instanceof ConfigCmd) {\n\t\t\tcurrentCfg = cmd\n\t\t} else if (cmd instanceof BuildCmd) {\n\t\t\tif (!rows[cmd.y])\n\t\t\t\trows[cmd.y] = []\n\t\t\tconst existingGroup = findGroup(cmd)\n\t\t\tif (existingGroup)\n\t\t\t\texistingGroup.commands.push(cmd)\n\t\t\telse\n\t\t\t\trows[cmd.y].push(new BuildCmdGroup(cmd, currentCfg?.clone()))\n\t\t}\n\t}\n\n\tbp.commands.length = 0\n\tconst lastCommands = [] // used for cmd+build commands that need to be built last\n\tlet lastCfg, cfgCmdIndex, lastBlockIndex = 0\n\tconst rowsValues = Object.values(rows)\n\tfor (let i = rowsValues.length - 1; i >= 0; i--) { // loop in reverse so rcd start from top\n\t\tfor (const group of rowsValues[i]) {\n\t\t\tconst useLastCommands = group.item == Item.EXPANDO_BOX\n\t\t\tcfgCmdIndex = (useLastCommands ? lastCommands : bp.commands).length\n\n\t\t\tif (group.cfgCmd && !group.cfgCmd.equals(lastCfg)) {\n\t\t\t\tconst existingCfgCmdIndex = findExistingCfgCmdIndex(group.cfgCmd, useLastCommands)\n\t\t\t\tif (existingCfgCmdIndex > -1) {\n\t\t\t\t\tcfgCmdIndex = existingCfgCmdIndex\n\t\t\t\t} else {\n\t\t\t\t\tlastCfg = group.cfgCmd\n\t\t\t\t\tif (useLastCommands)\n\t\t\t\t\t\tlastCommands.push(group.cfgCmd)\n\t\t\t\t\telse\n\t\t\t\t\t\tbp.commands.push(group.cfgCmd)\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tgroup.commands.sort((a, b) => a.x - b.x) // sort x coord left to right\n\n\t\t\t/** @type {BuildCmd[][]} */\n\t\t\tconst chunks = [[]]\n\t\t\tfor (const cmd of group.commands) {\n\t\t\t\tif (cmd.x - chunks[chunks.length - 1]?.[0]?.x >= 63)\n\t\t\t\t\tchunks.push([])\n\t\t\t\tchunks[chunks.length - 1].push(cmd)\n\t\t\t}\n\t\t\tfor (const chunk of chunks) {\n\t\t\t\tconst mainCmd = chunk.shift()\n\t\t\t\tif (chunk.length) {\n\t\t\t\t\tmainCmd.bits = new BuildBits(\"1\")\n\t\t\t\t\tfor (const cmd of chunk)\n\t\t\t\t\t\tmainCmd.bits.set(Math.floor(cmd.x - mainCmd.x))\n\t\t\t\t}\n\t\t\t\t(useLastCommands ? lastCommands : bp.commands)\n\t\t\t\t\t.splice(mainCmd.item.isBlock ? lastBlockIndex++ : cfgCmdIndex + 1, 0, mainCmd)\n\t\t\t}\n\t\t}\n\t}\n\tbp.commands.push(...lastCommands)\n\n\t/** @param {BuildCmd} cmd */\n\tfunction findGroup(cmd) {\n\t\tfor (const group of rows[cmd.y]) {\n\t\t\tif ((Math.abs(group.commands[0].x % 1 - cmd.x % 1) / group.commands[0].x || 0) == 0\n\t\t\t\t&& group.item == cmd.item\n\t\t\t\t&& group.shape == cmd.shape\n\t\t\t\t&& ((group.cfgCmd && currentCfg) ? group.cfgCmd.equals(currentCfg) : true)\n\t\t\t)\n\t\t\t\treturn group\n\t\t}\n\t}\n\n\tfunction findExistingCfgCmdIndex(targetCmd, useLastCommands) {\n\t\tconst cmds = useLastCommands ? lastCommands : bp.commands\n\t\tfor (let i = cmds.length - 1; i >= 0; i--) {\n\t\t\tif (cmds[i] instanceof ConfigCmd && cmds[i].equals(targetCmd)) {\n\t\t\t\treturn i\n\t\t\t}\n\t\t}\n\t\treturn -1\n\t}\n}\n\nfunction expandBuildBits(bp) {\n\tlet i = bp.commands.length\n\twhile (i--) {\n\t\tconst cmd = bp.commands[i]\n\t\tif (!(cmd instanceof BuildCmd && cmd.bits && !cmd.bits.isOne())) continue\n\n\t\tbp.commands.splice(i, 1)\n\t\tlet setBitI = 0, bitI = 0\n\t\tfor (const bit of cmd.bits) {\n\t\t\tif (bit) {\n\t\t\t\tconst newCmd = new BuildCmd({ x: cmd.x + bitI, y: cmd.y, item: cmd.item, shape: cmd.shape })\n\t\t\t\tbp.commands.splice(i + setBitI, 0, newCmd)\n\t\t\t\t++setBitI\n\t\t\t}\n\t\t\t++bitI\n\t\t}\n\t}\n}\n\n/** @param {Blueprint} bp */\nfunction stripRedundantCfgCmds(bp) {\n\tconst cmds = bp.commands\n\tlet i = cmds.length\n\twhile (i--) {\n\t\tif (!(cmds[i] instanceof ConfigCmd)) continue\n\t\t// if previous is a cfg, delete previous (redundant adjacent)\n\t\tif (cmds[i - 1] instanceof ConfigCmd) cmds.splice(i - 1, 1)\n\t\t// if current is first item, delete current (redundant at end)\n\t\tif (i == cmds.length - 1) cmds.splice(i, 1)\n\t}\n}\n", "export const usesTouch = matchMedia(\"(pointer: coarse)\").matches || !!navigator.maxTouchPoints\n\nconst elHeader = document.getElementsByTagName(\"header\")[0]\nconst elFooter = document.getElementsByTagName(\"footer\")[0]\n\nif (elHeader) await fetch(\"/assets/header.html\").then(res => res.text()).then(html => {\n\telHeader.insertAdjacentHTML(\"beforeend\", html)\n}).catch(console.error)\n\nif (elFooter) await fetch(\"/assets/footer.html\").then(res => res.text()).then(html => {\n\telFooter.insertAdjacentHTML(\"beforeend\", html)\n}).catch(console.error)\n\nexport function loadHF(credits, title = document.title) {\n\tconst dd = document.querySelector(\"header nav .dropdown\")\n\tdd.getElementsByClassName(\"text\")[0].innerHTML = location.pathname == \"/\" ? \"Tools\" : title\n\tdd.querySelectorAll(\".content>a\").forEach(el => {\n\t\tif (el.textContent == title) {\n\t\t\tel.classList.add(\"active\")\n\t\t\treturn\n\t\t}\n\t})\n\tif (credits)\n\t\tdocument.getElementById(\"credits\").innerHTML = title + \" \" + credits\n}\n\ndocument.querySelectorAll(\".custom-file-input\").forEach(el => {\n\tconst input = el.querySelector(\"input\")\n\tel.querySelector(\"button\").addEventListener(\"click\", () => input.click())\n})\n\n/* Dropdowns */\nconst openDropdowns = new Set()\n\nfunction toggleDropdown(el, force) {\n\tconst open = el.classList.toggle(\"open\", force)\n\tif (open) openDropdowns.add(el)\n\telse openDropdowns.delete(el)\n}\n\nwindow.addEventListener(usesTouch ? \"touchstart\" : \"mousedown\", e => {\n\tconst target = e.targetTouches ? e.changedTouches.item(0).target : e.target\n\tif (target.matches(\".dropdown\")) {\n\t\ttoggleDropdown(target)\n\t} else {\n\t\tif (target.tagName == \"A\") return // code below may block the link, especially if touch\n\t\tfor (const el of openDropdowns)\n\t\t\tel.classList.remove(\"open\")\n\t}\n})\n\nwindow.addEventListener(\"focusin\", e => {\n\tif (e.target.matches(\".dropdown:not(.open)\"))\n\t\treturn toggleDropdown(e.target)\n\topenDropdowns.forEach(el => !el.contains(e.target) && toggleDropdown(el, false))\n})\n\n/* Tooltips */\nexport function addTooltip(ref) {\n\tconst clickTriggered = \"clickTriggered\" in ref.dataset\n\tref.addEventListener(usesTouch ? \"touchend\" : (clickTriggered ? \"click\" : \"mouseenter\"), tooltipInteractionHandler, true)\n}\n\ndocument.querySelectorAll(\".tooltip-ref\").forEach(addTooltip)\n\nlet ttpCloseHandler\nfunction tooltipInteractionHandler() {\n\tconst ref = this\n\tlet space\n\tconst clickTriggered = \"clickTriggered\" in ref.dataset\n\tconst allowHover = \"allowHover\" in ref.dataset\n\tconst showAbove = \"showAbove\" in ref.dataset\n\tif (allowHover) {\n\t\tspace = ref.getElementsByClassName(\"tooltip-space\")[0]\n\t\tif (space) space.style.display = \"block\"\n\t}\n\tconst content = ref.nextElementSibling\n\tif ((usesTouch || clickTriggered) && content.style.display == \"block\")\n\t\treturn closeTooltip(content, space)\n\tif (content.style.display == \"block\")\n\t\treturn\n\tcontent.style.display = \"block\"\n\n\tconst refRect = ref.getBoundingClientRect()\n\tconst contRect = content.getBoundingClientRect()\n\tlet x = refRect.left + (refRect.width / 2) - (contRect.width / 2)\n\tlet y = refRect.top + (showAbove ? -contRect.height - 5 : refRect.height + 5)\n\n\tif (x <= 0) x = 1\n\telse if (x + contRect.width > window.innerWidth) x = window.innerWidth - contRect.width - 4\n\tif (y >= window.innerHeight) y = window.innerHeight\n\telse if (y + contRect.height >= window.innerHeight) y = window.innerHeight - contRect.height\n\tcontent.style.left = x + \"px\"\n\tcontent.style.top = y + \"px\"\n\n\twindow.addEventListener(\"scroll\", () => {\n\t\tcloseTooltip(content, space)\n\t}, { once: true })\n\n\tif (usesTouch) {\n\t\tttpCloseHandler = e => {\n\t\t\tif (!ref.contains(e.target) && !content.contains(e.target)) {\n\t\t\t\tcloseTooltip(content, space)\n\t\t\t\twindow.removeEventListener(\"touchend\", ttpCloseHandler)\n\t\t\t}\n\t\t}\n\t\twindow.addEventListener(\"touchend\", ttpCloseHandler)\n\t} else {\n\t\tttpCloseHandler = e => {\n\t\t\tif (ref.contains(e.relatedTarget))\n\t\t\t\treturn ref.addEventListener(\"mouseleave\", ttpCloseHandler, { once: true })\n\t\t\tif (e.relatedTarget == space)\n\t\t\t\treturn space.addEventListener(\"mouseleave\", ttpCloseHandler, { once: true })\n\t\t\tif (!allowHover || (allowHover && !content.contains(e.relatedTarget))) {\n\t\t\t\tif (elementContainsSelection(content)) { // keep open if user selected text in content\n\t\t\t\t\tcontent.addEventListener(\"mouseleave\", ttpCloseHandler, { once: true })\n\t\t\t\t\twindow.addEventListener(\"click\", e => {\n\t\t\t\t\t\tif (!content.contains(e.target))\n\t\t\t\t\t\t\tcloseTooltip(content, space)\n\t\t\t\t\t}, { once: true })\n\t\t\t\t} else\n\t\t\t\t\tcloseTooltip(content, space)\n\t\t\t} else {\n\t\t\t\tcontent.addEventListener(\"mouseleave\", ttpCloseHandler, { once: true })\n\t\t\t}\n\t\t}\n\t\tref.addEventListener(\"mouseleave\", ttpCloseHandler, { once: true })\n\t}\n\n\tfunction closeTooltip(content, space) {\n\t\tif (usesTouch)\n\t\t\twindow.removeEventListener(\"touchend\", ttpCloseHandler)\n\t\telse\n\t\t\tref.removeEventListener(\"mouseleave\", ttpCloseHandler)\n\t\tcontent.style.display = \"\"\n\t\tif (space) space.style.display = \"\"\n\t}\n}\n\nfunction elementContainsSelection(el) {\n\tconst sel = window.getSelection()\n\tif (sel.type != \"Range\" || sel.rangeCount < 1)\n\t\treturn false\n\tfor (let i = 0; i < sel.rangeCount; ++i) {\n\t\tif (!el.contains(sel.getRangeAt(i).commonAncestorContainer))\n\t\t\treturn false\n\t}\n\treturn true\n}\n\n/* Chips :has fallback for Firefox - synces radio :checked to its label */\nif (!CSS.supports(\"selector(:has(*))\")) {\n\tdocument.querySelectorAll(\".radio-chips\").forEach(chips => {\n\t\tchips.querySelectorAll(\"input\").forEach(radio => {\n\t\t\tif (radio.checked)\n\t\t\t\tradio.parentElement.setAttribute(\"checked\", \"\")\n\t\t\tradio.addEventListener(\"change\", () =>\n\t\t\t\tchips.querySelectorAll(\"label\").forEach(label =>\n\t\t\t\t\tlabel.toggleAttribute(\"data-chk\", label == radio.parentElement) // radio here is the checked one\n\t\t\t\t)\n\t\t\t)\n\t\t\tradio.addEventListener(\"focus\", () =>\n\t\t\t\tradio.parentElement.dataset.fcs = \"\"\n\t\t\t)\n\t\t\tradio.addEventListener(\"blur\", () =>\n\t\t\t\tdelete radio.parentElement.dataset.fcs\n\t\t\t)\n\t\t})\n\t})\n}\n\n/* Link range-number inputs */\ndocument.querySelectorAll(\"[range-link-number]\").forEach(rangeInput => {\n\tconst numberInput = rangeInput.nextElementSibling\n\tif (numberInput.value == \"\")\n\t\tnumberInput.value = rangeInput.value\n\trangeInput.addEventListener(\"input\", () => {\n\t\tnumberInput.value = rangeInput.value\n\t\tnumberInput.dispatchEvent(new Event(\"change\"))\n\t})\n\tnumberInput.addEventListener(\"change\", () =>\n\t\trangeInput.value = numberInput.value\n\t)\n})\n"],
  "mappings": "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",
  "names": ["autoInputSave_exports", "main", "data", "strgKey", "path", "el", "getPath", "selectors", "init_autoInputSave", "__esmMin", "BuildCmd", "Item", "PREFIX", "decode", "encode", "BuildBits", "BuildCmd", "ConfigCmd", "Item", "LoaderPoint", "Shape", "shapeFlipMap", "loaderFlipMap", "D", "k", "v", "flip", "bp", "cmd", "r", "c", "crop", "options", "pL", "pR", "newX", "i", "bit", "isIn", "stripRedundantCfgCmds", "x", "y", "rotate", "angle", "cX", "cY", "cos", "sin", "minX", "minY", "maxX", "maxY", "expandBuildBits", "rotateC", "makeBuildBits", "toFixed", "n", "digits", "f", "replace", "search", "replacement", "del", "amount", "searchItems", "resolveItemInputs", "doSearchAir", "replacementItem", "resolveItemName", "filled", "bitI", "inputs", "output", "categories", "isBigMac", "item", "name", "BuildCmdGroup", "cfgCmd", "rows", "currentCfg", "existingGroup", "findGroup", "lastCommands", "lastCfg", "cfgCmdIndex", "lastBlockIndex", "rowsValues", "group", "useLastCommands", "existingCfgCmdIndex", "findExistingCfgCmdIndex", "a", "b", "chunks", "chunk", "mainCmd", "targetCmd", "cmds", "setBitI", "newCmd", "usesTouch", "elHeader", "elFooter", "res", "html", "loadHF", "credits", "title", "dd", "el", "input", "openDropdowns", "toggleDropdown", "force", "target", "addTooltip", "ref", "clickTriggered", "tooltipInteractionHandler", "ttpCloseHandler", "space", "allowHover", "showAbove", "content", "closeTooltip", "refRect", "contRect", "x", "y", "e", "elementContainsSelection", "sel", "i", "chips", "radio", "label", "rangeInput", "numberInput", "credits", "autoInputSave", "loadHF", "inputBp", "opRadios", "opOptions", "elResult", "elsNotice", "buttonProcess", "buttonCopy", "buttonMove", "inputRotateAngle", "noticeTimeoutIds", "searchParams", "bp", "currentOp", "inputBpTimer", "autoCopy", "loadBlueprint", "radio", "div", "str", "notice", "decode", "err", "getBpStats", "newBp", "additionalNotice", "crop", "flip", "rotate", "replace", "PREFIX", "encode", "box", "buildables", "items", "item", "Item", "b", "c", "BuildCmd", "target", "color", "text", "temp", "el"]
}
